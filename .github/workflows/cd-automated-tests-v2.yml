name: cd-automated-tests

on:
  workflow_call:
    inputs:
      watchman_repo:
        type: string
        required: true
        description: watchman repository follwing the format - {org}/{repo}
      app:
        type: string
        required: false
        default: watchman
        description: name of the app (not required)
      slack_notification_text:
        type: string
        required: false
        default: Scheduled automated tests
      env:
        type: string
        required: true
        description: environment. eg. dev|uat|pre-prod|prod
      aws_region:
        type: string
        required: true
        description: aws region
      s3_bucket_reports:
        type: string
        required: true
        description: aws bucket where the test reports will be exported
      test_pack_json:
        type: string
        required: true
        description: |
          test packs json.
          
          examples:
          
          [{\"tag\":\"@regression and not (@registered_user or @fail)\",\"browser\":\"chrome\"},{\"tag\":\"@user_management\",\"browser\":\"chrome\"}]

          [{\"feature\":\"features/smoke_tests_features/non_reg_user_olaf\",\"browser\":\"chrome\"},{\"feature\":\"features/smoke_tests_features/reg_user_olaf\",\"browser\":\"chrome\"}]
    secrets:
      grid_git_grid_token:
        required: true
      aws_role:
        required: true
      slack_webhook_url:
        required: true

jobs:
  run-test-pack:
    runs-on: ubuntu-latest
    # test-addition-sam
    # continue-on-error: true
    # These permissions are required to use Github OIDC.
    permissions:
      id-token: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        value:
          - ${{ fromJson(inputs.test_pack_json) }}
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5
      - uses: nanasess/setup-chromedriver@v1
        with:
          chromedriver-version: '104.0.5112.79'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.aws_role }}
      - name: clone watchman repo
        run: |
          # checkout watchman repo using git
          git clone https://${{ secrets.grid_git_grid_token }}@github.com/${{ inputs.watchman_repo }}.git 
      - name: install dependencies
        run: |
          cd watchman/features
          BUNDLE_GEMFILE="${{ github.workspace }}/watchman/Gemfile"
          bundle install
      - name: run tests
        run: |
          cd watchman
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          
          date_now="$(date +%F)"
          cucumber_exit_code="0"

          if [ -z "${{ matrix.value.feature }}" ]; then
            echo "running test for tag ${{ matrix.value.tag }}"
            report_file_name="${{ matrix.value.tag }}.html"
            bundle exec cucumber --tag "${{ matrix.value.tag }}" ENVIRONMENT=${{ inputs.env }} BROWSER=${{ matrix.value.browser }} --format html --out="${report_file_name}" -f pretty || cucumber_exit_code="$?"
          else
            echo "running test for feature ${{ matrix.value.feature }}"
            report_file_name="${{ matrix.value.feature }}.html"
            bundle exec cucumber ${{ matrix.value.feature }} ENVIRONMENT=${{ inputs.env }} BROWSER=${{ matrix.value.browser }} --format html --out="${report_file_name}" -f pretty || cucumber_exit_code="$?"
          fi

          echo "tests completed with exit code ${cucumber_exit_code}"
          
          aws s3 cp --acl public-read ${report_file_name} s3://${{ inputs.s3_bucket_reports }}/${{ inputs.env }}/${date_now}/${report_file_name}

          echo "report available at:"
          echo "https://${{ inputs.s3_bucket_reports }}.s3.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.env }}/${date_now}/${report_file_name}"

          if [[ "$cucumber_exit_code" != "0" ]]; then
            exit 1
          fi

  slack-notify:
    runs-on: ubuntu-latest
    needs: [run-test-pack]
    outputs:
      tag: ${{ steps.variables.outputs.report_urls }}
    if: always() && !cancelled()
    steps:
      - name: set variables
        id: variables
        run: |
          date_now="$(date +%F)"
          echo '${{ inputs.test_pack_json }}' > tmp.json
          cat tmp.json
          url_prefix="https://${{ inputs.s3_bucket_reports }}.s3.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.env }}/${date_now}/"
          report_urls=$(cat tmp.json | jq "map(\"${url_prefix}\" + .feature + .tag + \".html\") | join(\"\\n\\n\")" | tr -d \")
          echo "::set-output name=report_urls::${report_urls}"
      - name: Send Slack message
        uses: slackapi/slack-github-action@v1.16.0
        with:
          payload: |
            {
              "text": "${{ inputs.slack_notification_text }} ${{ needs.run-test-pack.result }}",
              "attachments": [
                  {
                      "fields": [
                          { "title": "Application", "value": "${{ inputs.app }}", "short": false },
                          { "title": "Links to test pack results", "value": "${{ steps.variables.outputs.report_urls }}", "short": false }
                      ],
                      "color": "${{ needs.run-test-pack.result == 'failure' && 'danger' || 'good' }}"
                  }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.slack_webhook_url }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
